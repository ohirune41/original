<!DOCTYPE html>
<html>

  <header>
    <%= render "shared/header" %>
  </header>

  <body>
    <div class='main'>

      <%# 検索フォーム %>
      <div class='search-bar-contents'>
        <form class="search-form" action="#">
          <input class='input-box' placeholder='タイトルを入力'>
          <button class="search-button">
            <%= image_tag "search.png", class:"search-icon" %>
          </button>
        </form>
      </div>
      <%# 検索フォーム %>

      <div class='info'>
        <%# 検索された時にコンテンツを表示する %>
        <%if params[:looking_for].present? %>
          <% movieinfo = JSON.parse((Tmdb::Search.movie(params[:looking_for])).to_json) %>
          <h2><%= params[:looking_for] %>の検索結果</h2>
          =====================
          <% i = 0 %>
          <div class="card-wrapper">
            <% while i < movieinfo['table']['results'].count %>
              <div class="card">
                <div class="card-upperinfo">
                  <%if movieinfo['table']['results'][i]['table']['title'].present?%>
                    <h3><%= link_to movieinfo['table']['results'][i]['table']['title'],detail_path(movieinfo['table']['results'][i]['table']['id']) %></h3>
                  <%end%>

                  <% if movieinfo['table']['results'][i]['table']['release_date'].present? %>
                    <p class="release-date"><%= movieinfo['table']['results'][i]['table']['release_date'] %></p>
                  <%end%>
                </div>


                <% if movieinfo['table']['results'][i]['table']['poster_path'].present? %>
                  <p><%= image_tag 'https://image.tmdb.org/t/p/w1280' + movieinfo['table']['results'][i]['table']['poster_path'],class: "card-img" %></p>
                <%end%>
              </div>
              <% i += 1%>
            <%end%>
          </div>
        <%else%>
          <%# 検索されていない時にトレンドコンテンツを表示する %>
          <h2>本日の世界のトレンド</h2>
          ====================
          <% movieinfo = JSON.parse((Tmdb::Movie.popular).to_json) %>
          <% i = 0 %>
          <div class="card-wrapper">
            <% while i < movieinfo['table']['results'].count %>
              <div class="card">
                <% if movieinfo['table']['results'][i]['table']['poster_path'].present? %>
                  <p><%= image_tag 'https://image.tmdb.org/t/p/w1280' + movieinfo['table']['results'][i]['table']['poster_path'],class: "card-img" %></p>
                <%end%>
                <div class="card-upperinfo">
                  <%if movieinfo['table']['results'][i]['table']['title'].present?%>
                    <h3><%= link_to movieinfo['table']['results'][i]['table']['title'], detail_path(movieinfo['table']['results'][i]['table']['id'])%></h3>
                  <%end%>
                </div>
              </div>

              <% i += 1%>
            <%end%>
          </div>
        <%end%>
      </div>

      <%# 背景 %>
      <%# 仮置き %>
      <!-- threejs.org canvas lines example -->
      <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r67/three.min.js"></script>

      <script>
        var mouseX = 0,
          mouseY = 0,
          windowHalfX = window.innerWidth / 2,
          windowHalfY = window.innerHeight / 2,
          SEPARATION = 200,
          AMOUNTX = 10,
          AMOUNTY = 10,
          camera,
          scene,
          renderer;
  
        init();
        animate();

        function init() {

        var container,
          separation = 100,
          amountX = 50,
          amountY = 50,
          particle;
    
          container = document.createElement( 'div' );
          document.body.appendChild( container );

          scene = new THREE.Scene();

          renderer = new THREE.CanvasRenderer({ alpha: true }); // gradient; this can be swapped for WebGLRenderer
          renderer.setSize( window.innerWidth, window.innerHeight );
          container.appendChild( renderer.domElement );
    
          camera = new THREE.PerspectiveCamera(
            75,
            window.innerWidth / window.innerHeight,
            1,
            10000
          );
          camera.position.z = 100;

          // particles
          var PI2 = Math.PI * 2;
          var material = new THREE.SpriteCanvasMaterial({
            color: 0xffffff,
            program: function ( context ) {
              context.beginPath();
              context.arc( 0, 0, 0.5, 0, PI2, true );
              context.fill();
            }
          });
    
          var geometry = new THREE.Geometry();

          for ( var i = 0; i < 100; i ++ ) {
            particle = new THREE.Sprite( material );
            particle.position.x = Math.random() * 2 - 1;
            particle.position.y = Math.random() * 2 - 1;
            particle.position.z = Math.random() * 2 - 1;
            particle.position.normalize();
            particle.position.multiplyScalar( Math.random() * 10 + 450 );
            particle.scale.x = particle.scale.y = 10;
            scene.add( particle );
            geometry.vertices.push( particle.position );
          }

          // lines
          var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 0.5 } ) );
          scene.add( line );

          // mousey
          document.addEventListener( 'mousemove', onDocumentMouseMove, false );
          document.addEventListener( 'touchstart', onDocumentTouchStart, false );
          document.addEventListener( 'touchmove', onDocumentTouchMove, false );
    
          window.addEventListener( 'resize', onWindowResize, false );

        } // end init();

        function onWindowResize() {

          windowHalfX = window.innerWidth / 2;
          windowHalfY = window.innerHeight / 2;

          camera.aspect = window.innerWidth / window.innerHeight;
          camera.updateProjectionMatrix();

          renderer.setSize( window.innerWidth, window.innerHeight );

        }

        function onDocumentMouseMove(event) {

          mouseX = event.clientX - windowHalfX;
          mouseY = event.clientY - windowHalfY;

        }

        function onDocumentTouchStart( event ) {

          if ( event.touches.length > 1 ) {

            event.preventDefault();

            mouseX = event.touches[ 0 ].pageX - windowHalfX;
            mouseY = event.touches[ 0 ].pageY - windowHalfY;

          }
        }

        function onDocumentTouchMove( event ) {

          if ( event.touches.length == 1 ) {

            event.preventDefault();

            mouseX = event.touches[ 0 ].pageX - windowHalfX;
            mouseY = event.touches[ 0 ].pageY - windowHalfY;

          }
        }

        function animate() {
    
          requestAnimationFrame( animate );
          render();
    
        }

        function render() {
    
          camera.position.x += ( mouseX - camera.position.x ) * .05;
          camera.position.y += ( - mouseY + 200 - camera.position.y ) * .05;
          camera.lookAt( scene.position );

          renderer.render( scene, camera );
  
        }
      </script>
      <%# 仮置き %>
      <%# 背景 %>

    </div>
  </body>
</html>